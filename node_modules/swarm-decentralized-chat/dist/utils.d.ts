import { BatchId, Bee, BeeRequestOptions, Signer, UploadResult, Utils } from '@ethersphere/bee-js';
import { EthAddress, MessageData, UserActivity, UserWithIndex } from './types';
export declare function generateUsersFeedId(topic: string): string;
export declare function generateUserOwnedFeedId(topic: string, userAddress: EthAddress): string;
export declare function validateUserObject(user: any): boolean;
export declare function orderMessages(messages: MessageData[]): MessageData[];
export declare function removeDuplicateUsers(users: UserWithIndex[]): UserWithIndex[];
export declare function numberToFeedIndex(index: number): Utils.HexString<number>;
export declare function sleep(delay: number): Promise<unknown>;
export declare function incrementHexString(hexString: string, i?: bigint): string;
export declare function retryAwaitableAsync<T>(fn: () => Promise<T>, retries?: number, delay?: number): Promise<T>;
export declare function uploadObjectToBee(bee: Bee, jsObject: object, stamp: BatchId): Promise<UploadResult | null>;
export declare function graffitiFeedWriterFromTopic(bee: Bee, topic: string, options?: BeeRequestOptions): import("@ethersphere/bee-js").FeedWriter;
export declare function graffitiFeedReaderFromTopic(bee: Bee, topic: string, options?: BeeRequestOptions): import("@ethersphere/bee-js").FeedReader;
export declare function generateGraffitiFeedMetadata(topic: string): {
    consensusHash: Utils.Bytes<32>;
    graffitiSigner: Signer;
};
export declare function getLatestFeedIndex(bee: Bee, topic: string, address: EthAddress): Promise<{
    latestIndex: number;
    nextIndex: number;
}>;
export declare function isNotFoundError(error: any): any;
export declare class RunningAverage {
    private maxSize;
    private values;
    private sum;
    constructor(maxSize: number);
    addValue(newValue: number): void;
    getAverage(): number;
}
export declare function selectUsersFeedCommitWriter(activeUsers: UserWithIndex[]): EthAddress;
export declare function getActiveUsers(users: UserWithIndex[], userActivityTable: UserActivity): UserWithIndex[];
//# sourceMappingURL=utils.d.ts.map