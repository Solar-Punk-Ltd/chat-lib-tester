type Listener<T = any> = (data: T) => void;
export declare class EventEmitter {
    private events;
    constructor();
    on<T = any>(event: string, listener: Listener<T>): void;
    off<T = any>(event: string, listener: Listener<T>): void;
    cleanAll(): void;
    emit<T = any>(event: string, data: T): void;
}
export {};
//# sourceMappingURL=eventEmitter.d.ts.map