import { BatchId, Reference } from '@ethersphere/bee-js';
import { EthAddress, MessageData, ParticipantDetails } from './types';
export declare function setBeeUrl(url: string): void;
export declare function getChatActions(): {
    startFetchingForNewUsers: typeof enqueueUserFetch;
    startLoadingNewMessages: typeof readMessagesForAll;
    on: <T = any>(event: string, listener: (data: T) => void) => void;
    off: <T_1 = any>(event: string, listener: (data: T_1) => void) => void;
};
export declare function initChatRoom(topic: string, stamp: BatchId): Promise<void>;
export declare function startUserFetchProcess(topic: string): void;
export declare function stopUserFetchProcess(): void;
export declare function startMessageFetchProcess(topic: string): void;
export declare function stopMessageFetchProcess(): void;
export declare function initUsers(topic: string, ownAddress: EthAddress, stamp: BatchId): Promise<void>;
export declare function isRegistered(userAddress: EthAddress): boolean;
export declare function registerUser(topic: string, { participant, key, stamp, nickName: username }: ParticipantDetails): Promise<void>;
export declare function enqueueUserFetch(topic: string): () => void;
export declare function readMessagesForAll(topic: string): () => Promise<void>;
export declare function sendMessage(address: EthAddress, topic: string, messageObj: MessageData, stamp: BatchId, privateKey: string): Promise<Reference | null>;
export declare function getUserCount(): number;
//# sourceMappingURL=core.d.ts.map