"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.F_STEP = exports.MESSAGE_FETCH_MAX = exports.MESSAGE_FETCH_MIN = exports.FETCH_INTERVAL_DECREASE_LIMIT = exports.FETCH_INTERVAL_INCREASE_LIMIT = exports.DECREASE_LIMIT = exports.INCREASE_LIMIT = exports.MAX_TIMEOUT = exports.USER_UPDATE_INTERVAL = exports.MESSAGE_CHECK_INTERVAL = exports.IDLE_TIME = exports.REMOVE_INACTIVE_USERS_INTERVAL = exports.ETH_ADDRESS_LENGTH = exports.HEX_RADIX = exports.HOUR = exports.MINUTE = exports.SECOND = exports.EVENTS = exports.CONSENSUS_ID = exports.FIRST_SEGMENT_INDEX = void 0;
exports.FIRST_SEGMENT_INDEX = '0000000000000000';
// Consensus ID is used for the Graffiti feed, that is handling user registration
exports.CONSENSUS_ID = 'SwarmStream';
// Chat events, used together with getChatActions
exports.EVENTS = {
    LOADING_INIT_USERS: 'loadingInitUsers',
    LOADING_USERS: 'loadingUsers',
    LOADING_REGISTRATION: 'loadingRegistration',
    RECEIVE_MESSAGE: 'receiveMessage',
};
exports.SECOND = 1000;
exports.MINUTE = exports.SECOND * 60;
exports.HOUR = exports.MINUTE * 60;
exports.HEX_RADIX = 16;
exports.ETH_ADDRESS_LENGTH = 42;
// These are used for removing the inactive users from the message fetch loop
exports.REMOVE_INACTIVE_USERS_INTERVAL = 1 * exports.MINUTE;
exports.IDLE_TIME = 1 * exports.MINUTE; // User will be removed from readMessage loop after this time, until rejoin
exports.MESSAGE_CHECK_INTERVAL = 300; // User-side message check interval
exports.USER_UPDATE_INTERVAL = 8 * exports.SECOND; // User-side user update interval
exports.MAX_TIMEOUT = 1200; // Max timeout in ms
exports.INCREASE_LIMIT = 400; // When to increase max parallel request count (avg request time in ms)
exports.DECREASE_LIMIT = 800; // When to decrease max parallel request count (avg request time in ms)
exports.FETCH_INTERVAL_INCREASE_LIMIT = 1000; // Lower the frequency of message fetch
exports.FETCH_INTERVAL_DECREASE_LIMIT = 800; // Higher frequency for message fetch
exports.MESSAGE_FETCH_MIN = 300; // Lowest message fetch frequency (ms)
exports.MESSAGE_FETCH_MAX = 8 * exports.SECOND; // Highest message fetch frequency (ms)
exports.F_STEP = 100; // Message fetch step (ms)
